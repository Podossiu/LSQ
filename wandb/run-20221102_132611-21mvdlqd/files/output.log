INFO - Log file for this run: /home/ilena7440/LSQ/out/MobileNetv2_cifar10_a8w8_5_20221102-132612/MobileNetv2_cifar10_a8w8_5_20221102-132612.log
INFO - TensorBoard data directory: /home/ilena7440/LSQ/out/MobileNetv2_cifar10_a8w8_5_20221102-132612/tb_runs
Files already downloaded and verified
Files already downloaded and verified
INFO - Dataset `cifar10` size:
          Training Set = 50000 (391)
        Validation Set = 10000 (79)
              Test Set = 10000 (79)
INFO - Created `MobileNetv2` model for `cifar10` dataset
          Use pre-trained model = True
/home/ilena7440/LSQ/quan/quantizer/lsq.py:97: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  x_reshape = x.reshape(co // self.block_size, self.block_size, ci, kh, kw)
/home/ilena7440/qilbertenv/lib/python3.8/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
hello
********************pre-trained*****************
INFO - Inserted quantizers into the original model
INFO - Optimizer: SGD (
           Parameter Group 0
               dampening: 0
               foreach: None
               lr: 0.01
               maximize: False
               momentum: 0.9
               nesterov: False
               weight_decay: 4e-05
           )
INFO - LR scheduler: `MultiStepLr`
    Update per batch: True
             Group 0: 0.01
INFO - >>>>>>>> Epoch -1 (pre-trained model evaluation)
INFO - Validation: 10000 samples (128 per mini-batch)
INFO - Validation [   20/   79]   Loss 2.545371   Top1 10.429688   Top5 49.101562   BatchTime 0.219170
INFO - Validation [   40/   79]   Loss 2.549466   Top1 10.175781   Top5 49.941406   BatchTime 0.136934
INFO - Validation [   60/   79]   Loss 2.541519   Top1 10.117188   Top5 50.377604   BatchTime 0.106723
INFO - ==> Top1: 10.000    Top5: 50.000    Loss: 2.546
Traceback (most recent call last):
  File "main.py", line 144, in <module>
    main()
  File "main.py", line 111, in main
    top1, top5, _,sparsity = process.validate(val_loader, model, criterion,
  File "/home/ilena7440/LSQ/process.py", line 140, in validate
    weight_zero = (m.quan_w_fn(m.weight.detach())==0).sum()
  File "/home/ilena7440/qilbertenv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1125, in _call_impl
    forward_call = (self._slow_forward if torch._C._get_tracing_state() else self.forward)
KeyboardInterrupt
False
module.features.0.0 tensor(0., device='cuda:0')
True
False
module.features.1.conv.0 tensor(0.1389, device='cuda:0')
True
False
module.features.1.conv.3 tensor(0.1465, device='cuda:0')
True
False
module.features.2.conv.0 tensor(0.0599, device='cuda:0')
True
False
module.features.2.conv.3 tensor(0.0775, device='cuda:0')
True
False
module.features.2.conv.6 tensor(0.0608, device='cuda:0')
True
False
module.features.3.conv.0 tensor(0.0605, device='cuda:0')
True
False
module.features.3.conv.3 tensor(0.0448, device='cuda:0')
True
False
module.features.3.conv.6 tensor(0.0582, device='cuda:0')
True
False
module.features.4.conv.0 tensor(0.0561, device='cuda:0')
True
False
module.features.4.conv.3 tensor(0.0363, device='cuda:0')
True
False
module.features.4.conv.6 tensor(0.0610, device='cuda:0')
True
False
module.features.5.conv.0 tensor(0.0609, device='cuda:0')
True
False
module.features.5.conv.3 tensor(0.0556, device='cuda:0')
True
False
module.features.5.conv.6 tensor(0.0661, device='cuda:0')
True
False
module.features.6.conv.0 tensor(0.0599, device='cuda:0')
True
False
module.features.6.conv.3 tensor(0.0590, device='cuda:0')
True
False
module.features.6.conv.6 tensor(0.0671, device='cuda:0')
True
False
module.features.7.conv.0 tensor(0.0597, device='cuda:0')
True
False
module.features.7.conv.3 tensor(0.0324, device='cuda:0')
True
False
module.features.7.conv.6 tensor(0.0576, device='cuda:0')
True
False